{"version":3,"sources":["components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Section","styled","section","AccountBalance","props","buttonText","showBalance","balanceText","amount","className","onClick","event","preventDefault","showHideBalance","Td","td","Coin","balance","name","ticker","price","action","method","handleRefresh","id","CoinList","coinData","map","value","key","ExchangeHeader","src","logo","alt","Component","formatPrice","parseFloat","Number","toFixed","App","React","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","listResponse","coinIds","data","slice","coin","promises","Promise","all","coinPriceData","response","symbol","quotes","useEffect","length","valueChangeTicker","newPrice","USD","newCoinData","values","newValues","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99012e05.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport styled from 'styled-components';\r\nimport './AccountBalance.css';\r\n\r\nconst Section = styled.section`\r\n    border: 1px solid red;\r\n    font-size: 3rem;\r\n`;\r\n\r\nexport default function AccountBalance (props) {\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        props.showHideBalance(!props.showBalance);\r\n    }\r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    const balanceText = props.showBalance ? \"Balance: $\" + props.amount : \"\";\r\n    return (\r\n        <Section className=\"balance\">\r\n            {balanceText}\r\n            <button className=\"showHideBalance\" onClick={handleClick} >{buttonText}</button>\r\n        </Section>\r\n    );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired,\r\n  }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import styled, { css } from 'styled-components';\r\nimport styled from 'styled-components';\r\n\r\nconst Td = styled.td`\r\n    border: 2px solid #cccccc;\r\n    width: 25vh;\r\n`;\r\n\r\nexport default function Coin (props) {\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        props.handleRefresh(props.id);\r\n    }\r\n    const balanceText = (props.showBalance ? <Td>${props.balance}</Td> : <></>);\r\n    return (\r\n        <tr className=\"coin-row\">\r\n            <Td>{props.name}</Td>\r\n            <Td>{props.ticker}</Td>\r\n            <Td>${props.price}</Td>\r\n            {balanceText}\r\n            <Td>\r\n                <form action=\"#\" method=\"POST\">\r\n                    <button onClick={handleClick}>Refresh</button>\r\n                </form>\r\n            </Td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n  }\r\n  \r\n  ","import React from 'react'\r\nimport Coin from '../Coin/Coin'\r\n\r\nexport default function CoinList (props) {\r\n    const balanceText = props.showBalance ? <th>Balance</th> : <></>;\r\n    return (\r\n        <div>\r\n            <table className=\"coin-table\">\r\n            <thead>\r\n                <tr>\r\n                <th>Name</th>\r\n                <th>Ticker</th>\r\n                <th>Price</th>\r\n                {balanceText}\r\n                <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.coinData.map( value => \r\n                        <Coin key={value.key} id={value.key}\r\n                        showBalance={props.showBalance}\r\n                        handleRefresh={props.handleRefresh} \r\n                        {...value} />\r\n                    )\r\n                }\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport logo from './logo.svg'\r\nimport './ExchangeHeader.css';\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <img src={logo} alt=\"React logo\" className=\"App-logo\" />\r\n                <h1 className=\"App-title\">\r\n                    Coin Exchange\r\n                </h1>\r\n            </header>\r\n          )\r\n    }\r\n}\r\n","import './App.css';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance'\r\nimport CoinList from './components/CoinList/CoinList'\r\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader'\r\n\r\nimport React from 'react';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nconst COIN_COUNT = 10;\r\n\r\nconst formatPrice = (price) => {\r\n  return parseFloat(Number(price).toFixed(4));\r\n}\r\nfunction App(props) {\r\n  const[balance, setBalance] = React.useState(10000);\r\n  const[showBalance, setShowBalance] = React.useState(true);\r\n  const[coinData, setCoinData] = React.useState([]);\r\n\r\n  const componentDidMount = async () => {\r\n      const listResponse = await axios.get('https://api.coinpaprika.com/v1/coins');\r\n      const coinIds = listResponse.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n      const promises = coinIds.map(id => axios.get(`https://api.coinpaprika.com/v1/tickers/${id}`));\r\n      const coinData = await Promise.all(promises);\r\n      const coinPriceData = coinData.map((response) => {\r\n        var coin = response.data;\r\n        return {\r\n          key: coin.id,\r\n          name: coin.name,\r\n          ticker: coin.symbol,\r\n          balance: 0,\r\n          price: formatPrice(coin.quotes['USD'].price),\r\n        }\r\n      });\r\n      setCoinData(coinPriceData);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (coinData.length === 0) {\r\n      componentDidMount();\r\n    }\r\n  })\r\n\r\n  const showHideBalance = (showBalance) => {\r\n    setShowBalance(showBalance);\r\n  }\r\n\r\n  const handleRefresh = async (valueChangeTicker) => {\r\n    const response = await axios.get(`https://api.coinpaprika.com/v1/tickers/${valueChangeTicker}`);\r\n    const newPrice = formatPrice(response.data.quotes.USD.price);\r\n    const newCoinData = coinData.map( function( values ) {\r\n      let newValues = {...values};\r\n      if (valueChangeTicker === values.key) {\r\n        newValues.price = newPrice;\r\n      }\r\n      return newValues;\r\n    });\r\n    setCoinData(newCoinData);\r\n  }\r\n    return (\r\n      <div className=\"App\">\r\n        <ExchangeHeader />\r\n        <AccountBalance showHideBalance={showHideBalance} \r\n          amount={balance} \r\n          showBalance={showBalance} />\r\n        <CoinList coinData={coinData} \r\n          showHideBalance={showHideBalance} \r\n          showBalance={showBalance} \r\n          handleRefresh={handleRefresh} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}